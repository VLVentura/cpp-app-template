name: CI
on:
  pull_request:
  release:
    types: [published]
  push:
    tags:
    branches:
      - main
      - develop

env:
  # Some packages request that Conan use the system package manager to install
  # a few dependencies. This flag allows Conan to proceed with these installations;
  # leaving this flag undefined can cause some installation failures.
  CONAN_SYSREQUIRES_MODE: enabled

jobs:
  Test:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-20.04
    
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        include:
          - compiler: gcc
            compiler-version: 9
            llvm-version: 15
            config: gcc-production
            build-type: Release
            
          - compiler: gcc
            compiler-version: 9
            llvm-version: 15
            build-type: Debug

          - compiler: gcc
            compiler-version: 9
            llvm-version: 15
            config: gcc-developer_with_thread_sanitizer
            build-type: Debug

          - compiler: clang
            llvm-version: 15
            config: clang-production
            build-type: Release

          - compiler: clang
            llvm-version: 15
            config: clang-developer
            build-type: Debug

          - compiler: clang
            llvm-version: 15
            config: clang-developer_with_memory_sanitizer
            build-type: Debug

          - compiler: clang
            llvm-version: 15
            config: clang-developer_with_thread_sanitizer
            build-type: Debug

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup environment
        run: |
          sudo apt update
          DEBIAN_FRONTEND=noninteractive sudo apt install -y --no-install-recommends \
            build-essential autoconf libtool pkg-config wget tar git ccache ninja-build cppcheck \
            gcovr python3 python3-pip
      
      - name: Install Llvm
        run: |
          sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)" -s ${{ matrix.llvm-version }} all
          sudo apt update
          DEBIAN_FRONTEND=noninteractive sudo apt install -y --no-install-recommends \
            clang-${{ matrix.llvm-version }} clangd-${{ matrix.llvm-version }} \
            clang-format-${{ matrix.llvm-version }} \
            clang-tidy-${{ matrix.llvm-version }} clang-tools-${{ matrix.llvm-version }}

      - name: Install GCC
        if: ${{ matrix.compiler }} == gcc
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt update
          DEBIAN_FRONTEND=noninteractive sudo apt install -y --no-install-recommends \
            gcc-${{ matrix.compiler-version }} g++-${{ matrix.compiler-version }}
          update-alternatives --install /usr/bin/gcc gcc $(which gcc-${{ matrix.compiler-version }}) 100
          update-alternatives --install /usr/bin/g++ g++ $(which g++-${{ matrix.compiler-version }}) 100

      - name: Install CMake
        run: |
          sudo bash -c "$(wget -O - https://apt.kitware.com/kitware-archive.sh)"
          sudo apt update
          DEBIAN_FRONTEND=noninteractive sudo apt install -y --no-install-recommends cmake
      
      - name: Install Conan
        run: |
          python3 -m pip install --upgrade pip setuptools
          pip install conan==1.56

      - name: Configure ccache
        run: |
          ccache --max-size=2G --set-config=compression=true --set-config=compression_level=5
      
      - name: Configure cache
        id: configure-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.ccache
            ~/.conan
          key: ubuntu-20.04-cache
      
      - name: Configure conan
        if: steps.configure-cache.outputs.cache-hit != 'true'
        run: |
          conan profile new default --detect
          conan profile update settings.compiler=gcc default
          conan profile update settings.compiler.version=9 default
          conan profile update settings.compiler.cppstd=17 default
          conan profile update settings.compiler.libcxx=libstdc++11 default

      - name: Configure cmake
        run: |
          cmake --preset=${{ matrix.config }}
      
      - name: Build
        run: |
          cmake --build build/ --config ${{ matrix.build-type }} --target all -j $(nproc)
      
      - name: Test and code coverage
        if: ${{ matrix.build-type }} != Release
        run: |
          cmake --build build/ --target CodeCoverage -j $(nproc)