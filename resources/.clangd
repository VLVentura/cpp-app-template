CompileFlags: # Tweak the parse settings
  Add: [
    # This flag is useful when using clangd with a non-cmake project
    # --include-directory=

    # Threat C source code as C++
    -xc++,

    # Standard
    -std=c++17,
    # -std=c11,
    -Wall,
    -Wextra,
    -Wpedantic,
    
    # Threats all warnings as errors
    # -Werror,

    # Extra flags: some of them came with -Wall
    -Wshadow,
    -Wunused,
    -Wconversion,
    -Wnon-virtual-dtor,
    -Wold-style-cast,
    -Wcast-align,
    -Woverloaded-virtual,
    -Wsign-conversion,
    -Wdouble-promotion,
    -Wformat=2,
    -Wimplicit-fallthrough,
    
    # Clang Only
    -Weverything,
    -Wlifetime,

    # GCC Only
    # -Wnull-dereference,
    # -Wmisleading-indentation,
    # -Wduplicated-cond,
    # -Wduplicated-branches,
    # -Wlogical-op,
    # -Wuseless-cast,

    # Exclude Warnings
    -Wno-c++98-compat-pedantic,
  ]

Index:
  Background: Build # Build a type + incoming reference index in the background

Diagnostics:
  ClangTidy:
    Add: [
      clang-diagnostic-*
      clang-analyzer-*,

      bugprone-argument-comment,
      bugprone-assert-side-effect,
      bugprone-bad-signal-to-kill-thread,
      bugprone-branch-clone,
      bugprone-copy-constructor-init,
      bugprone-dangling-handle,
      bugprone-dynamic-static-initializers,
      bugprone-fold-init-type,
      bugprone-forward-declaration-namespace,
      bugprone-forwarding-reference-overload,
      bugprone-inaccurate-erase,
      bugprone-incorrect-roundings,
      bugprone-integer-division,
      bugprone-lambda-function-name,
      bugprone-macro-parentheses,
      bugprone-macro-repeated-side-effects,
      bugprone-misplaced-operator-in-strlen-in-alloc,
      bugprone-misplaced-pointer-arithmetic-in-alloc,
      bugprone-misplaced-widening-cast,
      bugprone-move-forwarding-reference,
      bugprone-multiple-statement-macro,
      bugprone-no-escape,
      bugprone-not-null-terminated-result,
      bugprone-parent-virtual-call,
      bugprone-posix-return,
      bugprone-reserved-identifier,
      bugprone-sizeof-container,
      bugprone-sizeof-expression,
      bugprone-spuriously-wake-up-functions,
      bugprone-string-constructor,
      bugprone-string-integer-assignment,
      bugprone-string-literal-with-embedded-nul,
      bugprone-suspicious-enum-usage,
      bugprone-suspicious-include,
      bugprone-suspicious-memory-comparison,
      bugprone-suspicious-memset-usage,
      bugprone-suspicious-missing-comma,
      bugprone-suspicious-semicolon,
      bugprone-suspicious-string-compare,
      bugprone-swapped-arguments,
      bugprone-terminating-continue,
      bugprone-throw-keyword-missing,
      bugprone-too-small-loop-variable,
      bugprone-undefined-memory-manipulation,
      bugprone-undelegated-constructor,
      bugprone-unhandled-self-assignment,
      bugprone-unused-raii,
      bugprone-unused-return-value,
      bugprone-use-after-move,
      bugprone-virtual-near-miss,

      cert-dcl21-cpp,
      cert-dcl58-cpp,
      cert-err34-c,
      cert-err52-cpp,
      cert-err60-cpp,
      cert-flp30-c,
      cert-msc24-c,
      cert-msc33-c,
      cert-msc50-cpp,
      cert-msc51-cpp,
      cert-str34-c,

      cppcoreguidelines-avoid-capture-default-when-capturing-this,
      cppcoreguidelines-avoid-do-while,
      cppcoreguidelines-avoid-reference-coroutine-parameters,
      cppcoreguidelines-interfaces-global-init,
      cppcoreguidelines-narrowing-conversions,
      cppcoreguidelines-pro-type-member-init,
      cppcoreguidelines-pro-type-static-cast-downcast,
      cppcoreguidelines-slicing,

      google-default-arguments,
      google-explicit-constructor,
      google-runtime-operator,

      hicpp-exception-baseclass,
      hicpp-multiway-paths-covered,

      misc-misplaced-const,
      misc-new-delete-overloads,
      misc-no-recursion,
      misc-non-copyable-objects,
      misc-throw-by-value-catch-by-reference,
      misc-unconventional-assign-operator,
      misc-uniqueptr-reset-release,
      misc-use-anonymous-namespace,

      modernize-avoid-bind,
      modernize-concat-nested-namespaces,
      modernize-deprecated-headers,
      modernize-deprecated-ios-base-aliases,
      modernize-loop-convert,
      modernize-make-shared,
      modernize-make-unique,
      modernize-pass-by-value,
      modernize-raw-string-literal,
      modernize-redundant-void-arg,
      modernize-replace-auto-ptr,
      modernize-replace-disallow-copy-and-assign-macro,
      modernize-replace-random-shuffle,
      modernize-return-braced-init-list,
      modernize-shrink-to-fit,
      modernize-unary-static-assert,
      modernize-use-auto,
      modernize-use-bool-literals,
      modernize-use-emplace,
      modernize-use-equals-default,
      modernize-use-equals-delete,
      modernize-use-nodiscard,
      modernize-use-noexcept,
      modernize-use-nullptr,
      modernize-use-override,
      modernize-use-transparent-functors,
      modernize-use-uncaught-exceptions,

      openmp-use-default-none,

      performance-faster-string-find,
      performance-for-range-copy,
      performance-implicit-conversion-in-loop,
      performance-inefficient-algorithm,
      performance-inefficient-string-concatenation,
      performance-inefficient-vector-operation,
      performance-move-const-arg,
      performance-move-constructor-init,
      performance-no-automatic-move,
      performance-noexcept-move-constructor,
      performance-trivially-destructible,
      performance-type-promotion-in-math-fn,
      performance-unnecessary-copy-initialization,
      performance-unnecessary-value-param,

      portability-simd-intrinsics,

      readability-avoid-const-params-in-decls,
      readability-const-return-type,
      readability-container-size-empty,
      readability-convert-member-functions-to-static,
      readability-delete-null-pointer,
      readability-deleted-default,
      readability-inconsistent-declaration-parameter-name,
      readability-make-member-function-const,
      readability-misleading-indentation,
      readability-misplaced-array-index,
      readability-non-const-parameter,
      readability-redundant-control-flow,
      readability-redundant-declaration,
      readability-redundant-function-ptr-dereference,
      readability-redundant-smartptr-get,
      readability-redundant-string-cstr,
      readability-redundant-string-init,
      readability-simplify-subscript-expr,
      readability-static-accessed-through-instance,
      readability-static-definition-in-anonymous-namespace,
      readability-string-compare,
      readability-uniqueptr-delete-release,
      readability-use-anyofallof,
      readability-identifier-naming
    ]

    Remove: []

    CheckOptions:
      readability-identifier-naming.NamespaceCase: lower_case
      readability-identifier-naming.ClassCase: CamelCase
      readability-identifier-naming.StructCase: CamelCase
      readability-identifier-naming.TemplateParameterCase: CamelCase
      readability-identifier-naming.FunctionCase: CamelCase
      readability-identifier-naming.EnumCase: CamelCase
      readability-identifier-naming.ConstantCase: UPPER_CASE
      readability-identifier-naming.LocalConstantCase: camelBack
      readability-identifier-naming.PrivateMemberCase: camelBack
      readability-identifier-naming.PrivateMemberPrefix: 'm_'
      readability-identifier-naming.ProtectedMemberCase: camelBack
      readability-identifier-naming.ProtectedMemberPrefix: 'm_'
      readability-identifier-naming.PublicMemberCase: camelBack
      readability-identifier-naming.StaticVariableCase: camelBack
      readability-identifier-naming.StaticVariablePrefix: 's_'
      readability-identifier-naming.ConstexprVariableCase: aNy_CasE
      readability-identifier-naming.LocalVariableCase: camelBack
      readability-identifier-naming.EnumConstantCase: UPPER_CASE
      readability-identifier-naming.MacroDefinitionCase: UPPER_CASE
      readability-identifier-naming.ParameterCase: camelBack
      readability-identifier-naming.TypeAliasCase: CamelCase
      readability-identifier-naming.TypedefCase: CamelCase
      modernize-replace-auto-ptr.IncludeStyle: llvm
      performance-move-const-arg.CheckTriviallyCopyableMove: 'true'
      modernize-use-auto.MinTypeNameLength: '5'
      readability-static-accessed-through-instance.NameSpecifierNestingThreshold: '3'
      bugprone-reserved-identifier.Invert: 'false'
      bugprone-unused-return-value.CheckedFunctions: '::std::async;::std::launder;::std::remove;::std::remove_if;::std::unique;::std::unique_ptr::release;::std::basic_string::empty;::std::vector::empty;::std::back_inserter;::std::distance;::std::find;::std::find_if;::std::inserter;::std::lower_bound;::std::make_pair;::std::map::count;::std::map::find;::std::map::lower_bound;::std::multimap::equal_range;::std::multimap::upper_bound;::std::set::count;::std::set::find;::std::setfill;::std::setprecision;::std::setw;::std::upper_bound;::std::vector::at;::bsearch;::ferror;::feof;::isalnum;::isalpha;::isblank;::iscntrl;::isdigit;::isgraph;::islower;::isprint;::ispunct;::isspace;::isupper;::iswalnum;::iswprint;::iswspace;::isxdigit;::memchr;::memcmp;::strcmp;::strcoll;::strncmp;::strpbrk;::strrchr;::strspn;::strstr;::wcscmp;::access;::bind;::connect;::difftime;::dlsym;::fnmatch;::getaddrinfo;::getopt;::htonl;::htons;::iconv_open;::inet_addr;::isascii;::isatty;::mmap;::newlocale;::openat;::pathconf;::pthread_equal;::pthread_getspecific;::pthread_mutex_trylock;::readdir;::readlink;::recvmsg;::regexec;::scandir;::semget;::setjmp;::shm_open;::shmget;::sigismember;::strcasecmp;::strsignal;::ttyname'
      cert-dcl16-c.NewSuffixes: 'L;LL;LU;LLU'
      readability-inconsistent-declaration-parameter-name.Strict: 'false'
      modernize-use-override.AllowOverrideAndFinal: 'false'
      modernize-pass-by-value.ValuesOnly: 'false'
      modernize-loop-convert.IncludeStyle: llvm
      cert-str34-c.DiagnoseSignedUnsignedCharComparisons: 'false'
      bugprone-suspicious-string-compare.WarnOnLogicalNotComparison: 'false'
      readability-redundant-smartptr-get.IgnoreMacros: 'true'
      bugprone-argument-comment.CommentNullPtrs: '0'
      bugprone-suspicious-string-compare.WarnOnImplicitComparison: 'true'
      modernize-use-emplace.TupleTypes: '::std::pair;::std::tuple'
      modernize-use-emplace.TupleMakeFunctions: '::std::make_pair;::std::make_tuple'
      cppcoreguidelines-narrowing-conversions.WarnOnFloatingPointNarrowingConversion: 'true'
      bugprone-argument-comment.StrictMode: '0'
      modernize-use-nodiscard.ReplacementString: '[[nodiscard]]'
      modernize-loop-convert.MakeReverseRangeHeader: ''
      modernize-replace-random-shuffle.IncludeStyle: llvm
      modernize-use-bool-literals.IgnoreMacros: 'true'
      bugprone-unhandled-self-assignment.WarnOnlyIfThisHasSuspiciousField: 'true'
      google-readability-namespace-comments.ShortNamespaceLines: '10'
      bugprone-suspicious-string-compare.StringCompareLikeFunctions: ''
      modernize-avoid-bind.PermissiveParameterList: 'false'
      modernize-use-override.FinalSpelling: final
      performance-move-constructor-init.IncludeStyle: llvm
      modernize-loop-convert.UseCxx20ReverseRanges: 'true'
      modernize-use-noexcept.ReplacementString: ''
      performance-type-promotion-in-math-fn.IncludeStyle: llvm
      modernize-loop-convert.NamingStyle: CamelCase
      bugprone-suspicious-include.ImplementationFileExtensions: 'c;cc;cpp;cxx'
      cppcoreguidelines-pro-type-member-init.UseAssignment: 'false'
      bugprone-suspicious-missing-comma.SizeThreshold: '5'
      bugprone-suspicious-include.HeaderFileExtensions: ';h;hh;hpp;hxx'
      performance-no-automatic-move.AllowedTypes: ''
      performance-for-range-copy.WarnOnAllAutoCopies: 'false'
      bugprone-argument-comment.CommentIntegerLiterals: '0'
      modernize-loop-convert.MakeReverseRangeFunction: ''
      readability-inconsistent-declaration-parameter-name.IgnoreMacros: 'true'
      hicpp-multiway-paths-covered.WarnOnMissingElse: 'false'
      modernize-pass-by-value.IncludeStyle: llvm
      bugprone-sizeof-expression.WarnOnSizeOfThis: 'true'
      bugprone-string-constructor.WarnOnLargeLength: 'true'
      bugprone-too-small-loop-variable.MagnitudeBitsUpperLimit: '16'
      bugprone-argument-comment.CommentFloatLiterals: '0'
      bugprone-argument-comment.CommentCharacterLiterals: '0'
      modernize-use-nullptr.NullMacros: 'NULL'
      modernize-make-shared.IgnoreMacros: 'true'
      bugprone-dynamic-static-initializers.HeaderFileExtensions: ';h;hh;hpp;hxx'
      bugprone-suspicious-enum-usage.StrictMode: 'false'
      performance-unnecessary-copy-initialization.AllowedTypes: ''
      bugprone-suspicious-missing-comma.MaxConcatenatedTokens: '5'
      modernize-use-transparent-functors.SafeMode: 'false'
      cppcoreguidelines-narrowing-conversions.PedanticMode: 'false'
      modernize-make-shared.IgnoreDefaultInitialization: 'true'
      bugprone-not-null-terminated-result.WantToUseSafeFunctions: 'true'
      modernize-make-shared.IncludeStyle: llvm
      bugprone-string-constructor.LargeLengthThreshold: '8388608'
      misc-throw-by-value-catch-by-reference.CheckThrowTemporaries: 'true'
      cert-oop54-cpp.WarnOnlyIfThisHasSuspiciousField: '0'
      modernize-use-override.IgnoreDestructors: 'false'
      performance-inefficient-vector-operation.EnableProto: 'false'
      modernize-make-shared.MakeSmartPtrFunction: 'std::make_shared'
      modernize-loop-convert.MaxCopySize: '16'
      bugprone-argument-comment.CommentStringLiterals: '0'
      portability-simd-intrinsics.Suggest: 'false'
      cppcoreguidelines-explicit-virtual-functions.IgnoreDestructors: '1'
      performance-for-range-copy.AllowedTypes: ''
      modernize-make-shared.MakeSmartPtrFunctionHeader: '<memory>'
      modernize-make-unique.IgnoreMacros: 'true'
      bugprone-sizeof-expression.WarnOnSizeOfConstant: 'true'
      readability-redundant-string-init.StringNames: '::std::basic_string_view;::std::basic_string'
      modernize-make-unique.IgnoreDefaultInitialization: 'true'
      modernize-use-emplace.ContainersWithPushBack: '::std::vector;::std::list;::std::deque'
      modernize-make-unique.IncludeStyle: llvm
      bugprone-argument-comment.CommentBoolLiterals: '0'
      bugprone-argument-comment.CommentUserDefinedLiterals: '0'
      modernize-use-override.OverrideSpelling: override
      readability-redundant-declaration.IgnoreMacros: 'true'
      performance-inefficient-string-concatenation.StrictMode: 'false'
      google-readability-braces-around-statements.ShortStatementLines: '1'
      modernize-make-unique.MakeSmartPtrFunction: 'std::make_unique'
      cppcoreguidelines-pro-type-member-init.IgnoreArrays: 'false'
      bugprone-reserved-identifier.AllowedIdentifiers: ''
      modernize-use-emplace.IgnoreImplicitConstructors: 'false'
      modernize-make-unique.MakeSmartPtrFunctionHeader: '<memory>'
      modernize-use-equals-delete.IgnoreMacros: 'true'
      bugprone-misplaced-widening-cast.CheckImplicitCasts: 'false'
      bugprone-suspicious-missing-comma.RatioThreshold: '0.200000'
      modernize-loop-convert.MinConfidence: reasonable
      misc-throw-by-value-catch-by-reference.MaxSize: '-1'
      performance-unnecessary-value-param.AllowedTypes: ''
      modernize-use-noexcept.UseNoexceptFalse: 'true'
      google-readability-namespace-comments.SpacesBeforeComments: '2'
      cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic: '1'
      bugprone-argument-comment.IgnoreSingleArgument: '0'
      bugprone-sizeof-expression.WarnOnSizeOfIntegerExpression: 'false'
      performance-faster-string-find.StringLikeClasses: '::std::basic_string;::std::basic_string_view'
      bugprone-assert-side-effect.CheckFunctionCalls: 'false'
      bugprone-string-constructor.StringNames: '::std::basic_string;::std::basic_string_view'
      bugprone-assert-side-effect.AssertMacros: assert,NSAssert,NSCAssert
      llvm-qualified-auto.AddConstToQualified: '0'
      cert-str34-c.CharTypdefsToIgnore: ''
      google-readability-function-size.StatementThreshold: '800'
      llvm-else-after-return.WarnOnConditionVariables: '0'
      cert-msc51-cpp.DisallowedSeedTypes: 'time_t,std::time_t'
      bugprone-sizeof-expression.WarnOnSizeOfCompareToConstant: 'true'
      bugprone-reserved-identifier.AggressiveDependentMemberLookup: 'false'
      modernize-use-equals-default.IgnoreMacros: 'true'
      modernize-raw-string-literal.DelimiterStem: lit
      misc-throw-by-value-catch-by-reference.WarnOnLargeObjects: 'false'
      modernize-raw-string-literal.ReplaceShorterLiterals: 'false'
      modernize-use-emplace.SmartPointers: '::std::shared_ptr;::std::unique_ptr;::std::auto_ptr;::std::weak_ptr'
      bugprone-dangling-handle.HandleClasses: 'std::basic_string_view;std::experimental::basic_string_view'
      performance-inefficient-vector-operation.VectorLikeClasses: '::std::vector'
      modernize-use-auto.RemoveStars: 'false'
      portability-simd-intrinsics.Std: ''
      performance-unnecessary-value-param.IncludeStyle: llvm
      modernize-replace-disallow-copy-and-assign-macro.MacroName: DISALLOW_COPY_AND_ASSIGN
      llvm-else-after-return.WarnOnUnfixable: '0'
      readability-simplify-subscript-expr.Types: '::std::basic_string;::std::basic_string_view;::std::vector;::std::array'